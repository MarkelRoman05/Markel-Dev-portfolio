---

const navItems = [
  { name: "Home", url: "#home" },
  { name: "About", url: "#about" },
  { name: "Skills", url: "#skills" },
  { name: "Projects", url: "#projects" },
  { name: "Contact", url: "#contact" },
];
---

<header
  class="fixed w-full bg-white/80 dark:bg-dark/80 backdrop-blur-md z-50 shadow-sm transition-colors duration-300"
>
  <div class="container mx-auto px-4 py-4 flex justify-between items-center">
    <a href="#home" class="text-2xl font-bold gradient-text">
      <img src="logo.png" alt="Logo" class="h-10 w-auto" />
    </a>

    <div class="flex items-center gap-6">
      <nav class="hidden md:block">
        <ul class="flex space-x-8">
          {
            navItems.map((item, index) => (
              <>
                <li>
                  <a
                    href={item.url}
                    class="text-dark dark:text-white hover:text-primary transition-colors duration-300 font-medium"
                  >
                    {item.name}
                  </a>
                </li>
                {index < navItems.length - 1 && <span class="text-dark dark:text-white">|</span>}
              </>
            ))
          }
        </ul>
      </nav>

      <button
        id="theme-toggle"
        class="p-2 ml-5 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-5 h-5 hidden dark:block"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
          ></path>
        </svg>

        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-5 h-5 block dark:hidden"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
          ></path>
        </svg>
      </button>

      <button id="menu-toggle" class="md:hidden text-dark dark:text-white">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile menu -->
  <div
    id="mobile-menu"
    class="md:hidden hidden bg-white dark:bg-dark transition-colors duration-300"
  >
    <ul class="flex flex-col py-4 px-4">
      {
        navItems.map((item) => (
          <li class="py-2">
            <a
              href={item.url}
              class="text-dark dark:text-white hover:text-primary transition-colors duration-300 font-medium mobile-link"
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</header>

<script>
  const menuToggle = document.getElementById("menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileLinks = document.querySelectorAll(".mobile-link");
  const themeToggle = document.getElementById("theme-toggle");

  menuToggle?.addEventListener("click", () => {
    mobileMenu?.classList.toggle("hidden");
  });

  mobileLinks.forEach((link) => {
    link.addEventListener("click", () => {
      mobileMenu?.classList.add("hidden");
    });
  });

  // Theme toggle functionality
  themeToggle?.addEventListener("click", () => {
    document.dispatchEvent(new CustomEvent("themeToggle"));
  });
</script>
